// <auto-generated />
using System;
using Assurance_Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assurance_Backend.Migrations
{
    [DbContext(typeof(AssuranceDbContext))]
    partial class AssuranceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assurance_Backend.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Assureur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assureurs");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Bien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DaeAcquisation")
                        .HasColumnType("datetime2");

                    b.Property<int>("StructureId")
                        .HasColumnType("int");

                    b.Property<int>("TypeBienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StructureId");

                    b.HasIndex("TypeBienId");

                    b.ToTable("Biens");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Compte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonneId");

                    b.ToTable("Comptes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.CompteBancaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rib")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompteBancaires");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEffet")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignature")
                        .HasColumnType("datetime2");

                    b.Property<float>("Exercice")
                        .HasColumnType("real");

                    b.Property<int>("NatureContratId")
                        .HasColumnType("int");

                    b.Property<int>("QuittancePrimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NatureContratId");

                    b.HasIndex("QuittancePrimeId");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DemandeAssurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEffet")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemandeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PersonneId")
                        .HasColumnType("int");

                    b.Property<int>("QuittancePrimeId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemandeTypeId");

                    b.HasIndex("PersonneId");

                    b.HasIndex("QuittancePrimeId");

                    b.ToTable("DemandeAssurances");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DemandeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("BienId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEffet")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpedition")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdZone")
                        .HasColumnType("int");

                    b.Property<int>("MarchandseId")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomChauffeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCompanie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomNavire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("BienId");

                    b.HasIndex("MarchandseId");

                    b.ToTable("DemandeItems");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DemandeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DemandeTypes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Devis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devises");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Dossier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDeclaration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MontantExpertise")
                        .HasColumnType("real");

                    b.Property<float>("MontantIdemniser")
                        .HasColumnType("real");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dossiers");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DossierSinistre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<int>("DossierId")
                        .HasColumnType("int");

                    b.Property<double>("MontantAssurance")
                        .HasColumnType("float");

                    b.Property<double>("MontantSinistre")
                        .HasColumnType("float");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SinistreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DossierId");

                    b.HasIndex("SinistreId");

                    b.ToTable("DossierSinistres");
                });

            modelBuilder.Entity("Assurance_Backend.Models.ItemMarchandise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarchandiseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarchandiseId");

                    b.ToTable("ItemMarchandises");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Marchandise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeTransportId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeTransportId");

                    b.ToTable("Marchandises");
                });

            modelBuilder.Entity("Assurance_Backend.Models.NatureContrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NatureContrats");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StructureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StructureId");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.PieceJointe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SinistreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SinistreId");

                    b.ToTable("PieceJointes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Police", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("AssureurId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContratId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarchandiseId")
                        .HasColumnType("int");

                    b.Property<int>("PersonneId")
                        .HasColumnType("int");

                    b.Property<int>("TypeBienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("AssureurId");

                    b.HasIndex("ContratId");

                    b.HasIndex("MarchandiseId");

                    b.HasIndex("PersonneId");

                    b.HasIndex("TypeBienId");

                    b.ToTable("Polices");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Privilaige", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Privilaiges");
                });

            modelBuilder.Entity("Assurance_Backend.Models.PrivilaigeCompte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<int>("PrivilaigeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.HasIndex("PrivilaigeId");

                    b.ToTable("PrivilaigeComptes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Quittance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssureurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignature")
                        .HasColumnType("datetime2");

                    b.Property<int>("DevisId")
                        .HasColumnType("int");

                    b.Property<int>("DossierSinistreId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Montant")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AssureurId");

                    b.HasIndex("DevisId");

                    b.HasIndex("DossierSinistreId");

                    b.ToTable("Quittances");
                });

            modelBuilder.Entity("Assurance_Backend.Models.QuittancePrime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("QuittancePrimes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Reglement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompteBancaireId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRemise")
                        .HasColumnType("datetime2");

                    b.Property<int>("DevisId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonneId")
                        .HasColumnType("int");

                    b.Property<int>("SituationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompteBancaireId");

                    b.HasIndex("DevisId");

                    b.HasIndex("PersonneId");

                    b.HasIndex("SituationId");

                    b.ToTable("Reglements");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Sinistre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cause")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSinistre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateValidation")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegatMateriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lieux")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MontantExpertise")
                        .HasColumnType("real");

                    b.Property<float>("MontantIndemniser")
                        .HasColumnType("real");

                    b.Property<string>("Objet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonneId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituationId")
                        .HasColumnType("int");

                    b.Property<int>("TypeSinistreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonneId");

                    b.HasIndex("SituationId");

                    b.HasIndex("TypeSinistreId");

                    b.ToTable("Sinistres");
                });

            modelBuilder.Entity("Assurance_Backend.Models.SinistreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("BienId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoliceId")
                        .HasColumnType("int");

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("SinistreItemNatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("BienId");

                    b.HasIndex("PoliceId");

                    b.HasIndex("SinistreItemNatureId");

                    b.ToTable("SinistreItems");
                });

            modelBuilder.Entity("Assurance_Backend.Models.SinistreItemNature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SinistreItemNatures");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Situation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Situations");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Structure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Structures");
                });

            modelBuilder.Entity("Assurance_Backend.Models.TypeBien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DureeVie")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeBiens");
                });

            modelBuilder.Entity("Assurance_Backend.Models.TypeSinistre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeSinistres");
                });

            modelBuilder.Entity("Assurance_Backend.Models.TypeTransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeTransports");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Bien", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Structure", "Structure")
                        .WithMany("Biens")
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.TypeBien", "TypeBien")
                        .WithMany("Biens")
                        .HasForeignKey("TypeBienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Structure");

                    b.Navigation("TypeBien");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Compte", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Personne", "Personne")
                        .WithMany("Comptes")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Contrat", b =>
                {
                    b.HasOne("Assurance_Backend.Models.NatureContrat", "NatureContrat")
                        .WithMany("Contrats")
                        .HasForeignKey("NatureContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.QuittancePrime", "QuittancePrime")
                        .WithMany("Contrats")
                        .HasForeignKey("QuittancePrimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NatureContrat");

                    b.Navigation("QuittancePrime");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DemandeAssurance", b =>
                {
                    b.HasOne("Assurance_Backend.Models.DemandeType", "DemandeType")
                        .WithMany("DemandeAssurances")
                        .HasForeignKey("DemandeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Personne", "Personne")
                        .WithMany("DemandeAssurances")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.QuittancePrime", "QuittancePrime")
                        .WithMany("DemandeAssurances")
                        .HasForeignKey("QuittancePrimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DemandeType");

                    b.Navigation("Personne");

                    b.Navigation("QuittancePrime");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DemandeItem", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Article", null)
                        .WithMany("DemandeItems")
                        .HasForeignKey("ArticleId");

                    b.HasOne("Assurance_Backend.Models.Bien", "Bien")
                        .WithMany("DemandeItems")
                        .HasForeignKey("BienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Marchandise", "Marchandise")
                        .WithMany("DemandeItems")
                        .HasForeignKey("MarchandseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bien");

                    b.Navigation("Marchandise");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DossierSinistre", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Dossier", "Dossier")
                        .WithMany("DossierSinistres")
                        .HasForeignKey("DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Sinistre", "Sinistre")
                        .WithMany("DossiersSinistre")
                        .HasForeignKey("SinistreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");

                    b.Navigation("Sinistre");
                });

            modelBuilder.Entity("Assurance_Backend.Models.ItemMarchandise", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Marchandise", "Marchandise")
                        .WithMany("ItemMarchandises")
                        .HasForeignKey("MarchandiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marchandise");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Marchandise", b =>
                {
                    b.HasOne("Assurance_Backend.Models.TypeTransport", "TypeTransport")
                        .WithMany("Marchandises")
                        .HasForeignKey("TypeTransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeTransport");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Personne", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Structure", "Structure")
                        .WithMany("Personnes")
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Structure");
                });

            modelBuilder.Entity("Assurance_Backend.Models.PieceJointe", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Sinistre", "Sinistre")
                        .WithMany("PiecesJointes")
                        .HasForeignKey("SinistreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinistre");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Police", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Article", "Article")
                        .WithMany("Polices")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Assureur", "Assureur")
                        .WithMany("Polices")
                        .HasForeignKey("AssureurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Contrat", "Contrat")
                        .WithMany("Polices")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Marchandise", "Marchandise")
                        .WithMany("Polices")
                        .HasForeignKey("MarchandiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Personne", "Personne")
                        .WithMany("Polices")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.TypeBien", "TypeBien")
                        .WithMany("Polices")
                        .HasForeignKey("TypeBienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Assureur");

                    b.Navigation("Contrat");

                    b.Navigation("Marchandise");

                    b.Navigation("Personne");

                    b.Navigation("TypeBien");
                });

            modelBuilder.Entity("Assurance_Backend.Models.PrivilaigeCompte", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Compte", "Compte")
                        .WithMany("PrivilaigeComptes")
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Privilaige", "Privilaige")
                        .WithMany("PrivilaigeComptes")
                        .HasForeignKey("PrivilaigeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compte");

                    b.Navigation("Privilaige");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Quittance", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Assureur", "Assureur")
                        .WithMany("Quittances")
                        .HasForeignKey("AssureurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Devis", "Devis")
                        .WithMany("Quittances")
                        .HasForeignKey("DevisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.DossierSinistre", "DossierSinistre")
                        .WithMany("Quittances")
                        .HasForeignKey("DossierSinistreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assureur");

                    b.Navigation("Devis");

                    b.Navigation("DossierSinistre");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Reglement", b =>
                {
                    b.HasOne("Assurance_Backend.Models.CompteBancaire", "CompteBancaire")
                        .WithMany("Reglements")
                        .HasForeignKey("CompteBancaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Devis", "Devis")
                        .WithMany("Reglements")
                        .HasForeignKey("DevisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Personne", "Personne")
                        .WithMany("Reglements")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Situation", "Situation")
                        .WithMany("Reglements")
                        .HasForeignKey("SituationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompteBancaire");

                    b.Navigation("Devis");

                    b.Navigation("Personne");

                    b.Navigation("Situation");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Sinistre", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Personne", "Personne")
                        .WithMany("Sinistres")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Situation", "Situation")
                        .WithMany("Sinistres")
                        .HasForeignKey("SituationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.TypeSinistre", "TypeSinistre")
                        .WithMany("Sinistres")
                        .HasForeignKey("TypeSinistreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");

                    b.Navigation("Situation");

                    b.Navigation("TypeSinistre");
                });

            modelBuilder.Entity("Assurance_Backend.Models.SinistreItem", b =>
                {
                    b.HasOne("Assurance_Backend.Models.Article", "Article")
                        .WithMany("SinistreItems")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Bien", "Bien")
                        .WithMany("SinistreItems")
                        .HasForeignKey("BienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assurance_Backend.Models.Police", null)
                        .WithMany("SinistreItems")
                        .HasForeignKey("PoliceId");

                    b.HasOne("Assurance_Backend.Models.SinistreItemNature", "SinistreItemNature")
                        .WithMany("SinistreItems")
                        .HasForeignKey("SinistreItemNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Bien");

                    b.Navigation("SinistreItemNature");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Article", b =>
                {
                    b.Navigation("DemandeItems");

                    b.Navigation("Polices");

                    b.Navigation("SinistreItems");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Assureur", b =>
                {
                    b.Navigation("Polices");

                    b.Navigation("Quittances");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Bien", b =>
                {
                    b.Navigation("DemandeItems");

                    b.Navigation("SinistreItems");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Compte", b =>
                {
                    b.Navigation("PrivilaigeComptes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.CompteBancaire", b =>
                {
                    b.Navigation("Reglements");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Contrat", b =>
                {
                    b.Navigation("Polices");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DemandeType", b =>
                {
                    b.Navigation("DemandeAssurances");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Devis", b =>
                {
                    b.Navigation("Quittances");

                    b.Navigation("Reglements");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Dossier", b =>
                {
                    b.Navigation("DossierSinistres");
                });

            modelBuilder.Entity("Assurance_Backend.Models.DossierSinistre", b =>
                {
                    b.Navigation("Quittances");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Marchandise", b =>
                {
                    b.Navigation("DemandeItems");

                    b.Navigation("ItemMarchandises");

                    b.Navigation("Polices");
                });

            modelBuilder.Entity("Assurance_Backend.Models.NatureContrat", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Personne", b =>
                {
                    b.Navigation("Comptes");

                    b.Navigation("DemandeAssurances");

                    b.Navigation("Polices");

                    b.Navigation("Reglements");

                    b.Navigation("Sinistres");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Police", b =>
                {
                    b.Navigation("SinistreItems");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Privilaige", b =>
                {
                    b.Navigation("PrivilaigeComptes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.QuittancePrime", b =>
                {
                    b.Navigation("Contrats");

                    b.Navigation("DemandeAssurances");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Sinistre", b =>
                {
                    b.Navigation("DossiersSinistre");

                    b.Navigation("PiecesJointes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.SinistreItemNature", b =>
                {
                    b.Navigation("SinistreItems");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Situation", b =>
                {
                    b.Navigation("Reglements");

                    b.Navigation("Sinistres");
                });

            modelBuilder.Entity("Assurance_Backend.Models.Structure", b =>
                {
                    b.Navigation("Biens");

                    b.Navigation("Personnes");
                });

            modelBuilder.Entity("Assurance_Backend.Models.TypeBien", b =>
                {
                    b.Navigation("Biens");

                    b.Navigation("Polices");
                });

            modelBuilder.Entity("Assurance_Backend.Models.TypeSinistre", b =>
                {
                    b.Navigation("Sinistres");
                });

            modelBuilder.Entity("Assurance_Backend.Models.TypeTransport", b =>
                {
                    b.Navigation("Marchandises");
                });
#pragma warning restore 612, 618
        }
    }
}
